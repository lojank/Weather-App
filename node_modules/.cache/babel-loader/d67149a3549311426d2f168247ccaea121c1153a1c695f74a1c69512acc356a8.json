{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/Weather App/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport WeatherLocation from \"./components/WeatherLocation\";\nimport Error from \"./components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define your API key from OpenWeatherMap API\n  const YOUR_API_KEY = \"3289764f272a524f9cf22f194959aa13\";\n\n  // Define state variables for latitude and longitude\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n\n  // Define the structure of the weather data using an interface\n\n  // Initialize state for weather data and error messages\n  const [data, setData] = useState({\n    name: \"\",\n    sys: {\n      country: \"\"\n    },\n    wind: {\n      speed: 0\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0\n    },\n    weather: [{\n      description: \"\",\n      icon: \"\"\n    }]\n  });\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  // fetch the user's coordinates\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      }, function (error) {\n        if (error.code === error.PERMISSION_DENIED) {\n          setErrorMsg(\"Please turn on location settings\");\n        } else {\n          setErrorMsg(\"Error getting location: \" + error.message);\n        }\n      });\n    } else {\n      setErrorMsg(\"Geolocation API is not supported. Please try another browser\");\n    }\n  }, []);\n\n  // Use another useEffect to fetch weather data based on latitude and longitude\n  useEffect(() => {\n    if (lat && long) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${YOUR_API_KEY}`).then(res => res.json()).then(data => {\n        setData(data);\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  }, [lat, long]);\n\n  // Function to convert temperature from Kelvin to Celsius\n  function kelvin_to_celsius(k) {\n    return Math.round(k - 273.15);\n  }\n\n  // Render different components based on error messages and weather data\n  return errorMsg !== \"\" || data.name === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-body\",\n    children: /*#__PURE__*/_jsxDEV(Error, {\n      data: data,\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-body\",\n    children: [/*#__PURE__*/_jsxDEV(WeatherLocation, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: data,\n      convert_temp: kelvin_to_celsius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n      data: data,\n      convert_temp: kelvin_to_celsius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mBO5tltwKKXLfE5uQErquq9Z22c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","CurrentWeather","WeatherInfo","WeatherLocation","Error","jsxDEV","_jsxDEV","App","_s","YOUR_API_KEY","lat","setLat","long","setLong","data","setData","name","sys","country","wind","speed","main","temp","feels_like","temp_min","temp_max","weather","description","icon","errorMsg","setErrorMsg","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","message","fetch","then","res","json","catch","console","kelvin_to_celsius","k","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","convert_temp","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/Weather App/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport WeatherLocation from \"./components/WeatherLocation\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n  // Define your API key from OpenWeatherMap API\n  const YOUR_API_KEY = \"3289764f272a524f9cf22f194959aa13\";\n\n  // Define state variables for latitude and longitude\n  const [lat, setLat] = useState<number>();\n  const [long, setLong] = useState<number>();\n\n  // Define the structure of the weather data using an interface\n  interface WeatherData {\n    name: string;\n    sys: {\n      country: string;\n    };\n    wind: {\n      speed: number;\n    };\n    main: {\n      temp: number;\n      feels_like: number;\n      temp_min: number;\n      temp_max: number;\n    };\n    weather: {\n      description: string;\n      icon: string;\n    }[];\n  }\n\n  // Initialize state for weather data and error messages\n  const [data, setData] = useState<WeatherData>({\n    name: \"\",\n    sys: {\n      country: \"\",\n    },\n    wind: {\n      speed: 0,\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0,\n    },\n    weather: [\n      {\n        description: \"\",\n        icon: \"\",\n      },\n    ],\n  });\n\n  const [errorMsg, setErrorMsg] = useState<string>(\"\");\n\n  // fetch the user's coordinates\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          setLat(position.coords.latitude);\n          setLong(position.coords.longitude);\n        },\n        function (error) {\n          if (error.code === error.PERMISSION_DENIED) {\n            setErrorMsg(\"Please turn on location settings\");\n          } else {\n            setErrorMsg(\"Error getting location: \" + error.message);\n          }\n        }\n      );\n    } else {\n      setErrorMsg(\n        \"Geolocation API is not supported. Please try another browser\"\n      );\n    }\n  }, []);\n\n  // Use another useEffect to fetch weather data based on latitude and longitude\n  useEffect(() => {\n    if (lat && long) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${YOUR_API_KEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n        });\n    }\n  }, [lat, long]);\n\n  // Function to convert temperature from Kelvin to Celsius\n  function kelvin_to_celsius(k: number): number {\n    return Math.round(k - 273.15);\n  }\n\n  // Render different components based on error messages and weather data\n  return errorMsg !== \"\" || data.name === \"\" ? (\n    <div className=\"weather-body\">\n      <Error data={data} errorMsg={errorMsg} />\n    </div>\n  ) : (\n    <div className=\"weather-body\">\n      <WeatherLocation data={data} />\n      <CurrentWeather data={data} convert_temp={kelvin_to_celsius} />\n      <WeatherInfo data={data} convert_temp={kelvin_to_celsius} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}