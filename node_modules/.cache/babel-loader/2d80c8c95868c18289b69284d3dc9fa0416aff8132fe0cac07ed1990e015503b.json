{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [state, setState] = useState('');\n  //   const [city, setCity] = useState(\"Markham\")\n  //   const [country, setCountry] = useState(\"CA\")\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city},${props.country}&appid=3289764f272a524f9cf22f194959aa13`) // Replace YOUR_API_KEY with your actual API key\n    .then(res => res.json()).then(data => {\n      setState(data); // Assuming you want to display the weather description\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  function new_location() {}\n  function city_change() {\n    setCity(prev => city);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Weather in \", city, \", \", country, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(state).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", JSON.stringify(value)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"8PHpRkwj8Us+jPH4LTjNLeOK0mE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","props","_s","state","setState","fetch","city","country","then","res","json","data","catch","error","console","new_location","city_change","setCity","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Main.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport './Main.css';\n\nfunction App(props: any) {\n  const [state, setState] = useState('')\n//   const [city, setCity] = useState(\"Markham\")\n//   const [country, setCountry] = useState(\"CA\")\n\n\n\n\nuseEffect(() => {\n  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.city},${props.country}&appid=3289764f272a524f9cf22f194959aa13`) // Replace YOUR_API_KEY with your actual API key\n    .then(res => res.json())\n    .then(data => {\n      setState(data); // Assuming you want to display the weather description\n    })\n    .catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n}, []);\n\n\n\n\nfunction new_location() {\n\n}\n\nfunction city_change() {\n  setCity(prev => city)\n}\n\nreturn (\n  <div>\n\n    <h1>Weather in {city}, {country}:</h1>\n    <ul>\n        {Object.entries(state).map(([key, value]) => (\n          <li key={key}>\n            <strong>{key}:</strong> {JSON.stringify(value)}\n          </li>\n        ))}\n      </ul>\n  </div>\n);\n\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAACC,KAAU,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA;;EAKAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,qDAAoDJ,KAAK,CAACK,IAAK,IAAGL,KAAK,CAACM,OAAQ,yCAAwC,CAAC,CAAC;IAAA,CAC9HC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAKN,SAASE,YAAYA,CAAA,EAAG,CAExB;EAEA,SAASC,WAAWA,CAAA,EAAG;IACrBC,OAAO,CAACC,IAAI,IAAIZ,IAAI,CAAC;EACvB;EAEA,oBACEP,OAAA;IAAAoB,QAAA,gBAEEpB,OAAA;MAAAoB,QAAA,GAAI,aAAW,EAACb,IAAI,EAAC,IAAE,EAACC,OAAO,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCxB,OAAA;MAAAoB,QAAA,EACKK,MAAM,CAACC,OAAO,CAACtB,KAAK,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACtC7B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,GAASQ,GAAG,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;MAAA,GADvCD,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGR;AAACrB,EAAA,CA5CQF,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}