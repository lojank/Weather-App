{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Location from './components/Location';\nimport WeatherLocation from './components/WeatherLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [data, setData] = useState({\n    name: \"\",\n    cod: 0,\n    sys: {\n      country: \"\"\n    },\n    wind: {\n      speed: 0\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0\n    },\n    weather: [{\n      description: \"\",\n      icon: \"\"\n    }]\n  });\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      }, function (error) {\n        if (error.code === error.PERMISSION_DENIED) {\n          setErrorMsg(\"Please turn on location settings\");\n        } else {\n          setErrorMsg(\"Error getting location: \" + error.message);\n        }\n      });\n    } else {\n      setErrorMsg(\"Geolocation API is not supported. Please try another browser\");\n    }\n  }, []);\n  useEffect(() => {\n    if (lat && long) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`).then(res => res.json()).then(data => {\n        setData(data);\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: true,\n    children: [/*#__PURE__*/_jsxDEV(WeatherLocation, {\n      data: data,\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Location, {\n      data: data,\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HKEuem1rPlW6u1Qo3R27hjl8LFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Location","WeatherLocation","jsxDEV","_jsxDEV","App","_s","lat","setLat","long","setLong","data","setData","name","cod","sys","country","wind","speed","main","temp","feels_like","temp_min","temp_max","weather","description","icon","errorMsg","setErrorMsg","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","message","fetch","then","res","json","catch","console","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css'\nimport Location from './components/Location';\nimport WeatherLocation from './components/WeatherLocation';\n\n\nfunction App() {\n\n  const [lat, setLat] = useState<number>();\n    const [long, setLong] = useState<number>();\n  \n    interface WeatherData {\n        name: string;\n        cod: number;\n        sys: {\n            country: string;\n        }\n        wind: {\n            speed: number;\n        }\n        main: {\n            temp: number;\n            feels_like: number;\n            temp_min: number;\n            temp_max: number;\n        }\n        weather: {\n            description: string;\n            icon: string;\n        }[];\n    }\n\n    const [data, setData] = useState<WeatherData>({\n        name: \"\",\n        cod: 0,\n        sys: {\n            country: \"\"\n        },\n        wind: {\n            speed: 0\n        },\n        main: {\n            temp: 0,\n            feels_like: 0,\n            temp_min: 0,\n            temp_max: 0\n        },\n        weather: [{\n            description: \"\",\n            icon: \"\"\n        }]\n    });\n\n    const [errorMsg, setErrorMsg] = useState(\"\");\n\n    useEffect(() => {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition(\n                function (position) {\n                setLat(position.coords.latitude)\n                setLong(position.coords.longitude)\n              },\n              function (error) {\n                if (error.code === error.PERMISSION_DENIED) {\n                    setErrorMsg(\"Please turn on location settings\");\n                } else {\n                    setErrorMsg(\"Error getting location: \" + error.message);\n                }\n              }\n            );\n          } else {\n            setErrorMsg(\"Geolocation API is not supported. Please try another browser\");\n          }\n        }\n     \n    ,[]);\n\n    useEffect(() => {\n        if (lat && long) {\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n            .then(res => res.json())\n            .then(data => {\n                setData(data); \n            })\n            .catch(error => {\n            console.error(\"Error fetching data:\", error);\n        });\n    }\n        \n}, [lat, long]);\n    \n\n\n\n  return (\n    <div class>\n      <WeatherLocation data={data} errorMsg={errorMsg} />\n      <Location data={data} errorMsg={errorMsg}/>\n    </div>  \n  )\n  \n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}