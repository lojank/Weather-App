{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    return () => {\n      fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => console.log(data.data.memes));\n    };\n  }, []);\n  let [meme, setMemeState] = useState({\n    top_text: \"\",\n    bottom_text: \"\",\n    image: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  let [allMemesData, setAllMemesData] = useState([]);\n  function getMemeImage() {\n    let rand_num = Math.floor(Math.random() * allMemesData.length);\n    setMemeState(prev => ({\n      ...prev,\n      image: allMemesData[rand_num].url\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemeState(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFgbxcmxAoXGjXuV67CT6IpFYJA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","fetch","then","res","json","data","console","log","memes","meme","setMemeState","top_text","bottom_text","image","allMemesData","setAllMemesData","getMemeImage","rand_num","Math","floor","random","length","prev","url","handleChange","event","name","value","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n\n  \n  useEffect(() => {\n    return () => { fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(data => console.log(data.data.memes))\n}}, [])\n\n  let [meme, setMemeState] = useState({\n    top_text: \"\",\n    bottom_text: \"\",\n    image: \"http://i.imgflip.com/1bij.jpg\"\n  })\n\n  let [allMemesData, setAllMemesData] = useState<any[]>([])\n\n  function getMemeImage() { \n    let rand_num = Math.floor(Math.random() * allMemesData.length)\n    setMemeState(prev => ({\n      ...prev,\n      image: allMemesData[rand_num].url\n    }))\n  }\n\n  function handleChange(event: any) {\n    const {name, value} = event.target\n    setMemeState(prev => ({\n      ...prev,\n      [name] : value,\n    }))\n  }\n\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIbL,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MAAEM,KAAK,CAAC,mCAAmC,CAAC,CACtDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACA,IAAI,CAACG,KAAK,CAAC,CAAC;IACjD,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAEL,IAAI,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC;IAClCe,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAQ,EAAE,CAAC;EAEzD,SAASoB,YAAYA,CAAA,EAAG;IACtB,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,YAAY,CAACO,MAAM,CAAC;IAC9DX,YAAY,CAACY,IAAI,KAAK;MACpB,GAAGA,IAAI;MACPT,KAAK,EAAEC,YAAY,CAACG,QAAQ,CAAC,CAACM;IAChC,CAAC,CAAC,CAAC;EACL;EAEA,SAASC,YAAYA,CAACC,KAAU,EAAE;IAChC,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAClClB,YAAY,CAACY,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAACI,IAAI,GAAIC;IACX,CAAC,CAAC,CAAC;EACL;EAEA,oBACE7B,OAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAAChC,EAAA,CAvCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}