{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Location() {\n  _s();\n  const lookup = require('country-code-lookup');\n  let result = lookup.byIso('CA');\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [data, setData] = useState({\n    name: \"\",\n    cod: 0,\n    sys: {\n      country: \"\"\n    },\n    wind: {\n      speed: 0\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0\n    },\n    weather: [{\n      description: \"\",\n      icon: \"\"\n    }]\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {\n    if (lat && long) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`).then(res => res.json()).then(data => {\n        setData(data);\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  }, [lat, long]);\n  function kelvin_to_celcius(k) {\n    return Math.round(k - 273.15);\n  }\n  function capitalize(sentence) {\n    for (let i = 0; i < sentence.length; i++) {\n      if (i == 0 || sentence[i - 1] == \" \") {\n        sentence = sentence.slice(0, i) + sentence[i].toUpperCase() + sentence.slice(i + 1);\n      }\n    }\n    return sentence;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weather-location\",\n          children: [\"Weather in \", data.name, \", \", data.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-icon-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"weather-icon\",\n            src: `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n            alt: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"weather-description\",\n            children: capitalize(data.weather[0].description)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-main-temp-div\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"weather-main-temp\",\n            children: [kelvin_to_celcius(data.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Feels like: \", kelvin_to_celcius(data.main.feels_like), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"H \", kelvin_to_celcius(data.main.temp_max), \"\\xB0C | \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"L \", kelvin_to_celcius(data.main.temp_min), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Wind: \", Math.round(data.wind.speed * 3.6), \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Location, \"FCSrf09sFhtoMo7HwdXECDkgnn0=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","lookup","require","result","byIso","lat","setLat","long","setLong","data","setData","name","cod","sys","country","wind","speed","main","temp","feels_like","temp_min","temp_max","weather","description","icon","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","catch","error","console","kelvin_to_celcius","k","Math","round","capitalize","sentence","i","length","slice","toUpperCase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport './Location.css'\n\nfunction Location() {\n    const lookup = require('country-code-lookup')\n  \n    let result: Country = lookup.byIso('CA');\n\n\n    const [lat, setLat] = useState<number>();\n    const [long, setLong] = useState<number>();\n\n    interface Country {\n        country: string;\n    }\n  \n    interface WeatherData {\n        name: string;\n        cod: number;\n        sys: {\n            country: string;\n        }\n        wind: {\n            speed: number;\n        }\n        main: {\n            temp: number;\n            feels_like: number;\n            temp_min: number;\n            temp_max: number;\n        }\n        weather: {\n            description: string;\n            icon: string;\n        }[];\n    }\n\n    const [data, setData] = useState<WeatherData>({\n        name: \"\",\n        cod: 0,\n        sys: {\n            country: \"\"\n        },\n        wind: {\n            speed: 0\n        },\n        main: {\n            temp: 0,\n            feels_like: 0,\n            temp_min: 0,\n            temp_max: 0\n        },\n        weather: [{\n            description: \"\",\n            icon: \"\"\n        }]\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude)\n            setLong(position.coords.longitude)\n        }\n     )\n    },[])\n\n    useEffect(() => {\n        if (lat && long) {\n\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n            .then(res => res.json())\n            .then(data => {\n                setData(data); \n            })\n            .catch(error => {\n            console.error(\"Error fetching data:\", error);\n        });\n    }\n        \n}, [lat, long]);\n    \n\n\n    function kelvin_to_celcius(k: number):number {\n        return (Math.round(k-273.15))\n    }\n\n    function capitalize(sentence: string):string {\n        for(let i=0; i<sentence.length; i++) {\n            if (i==0 || sentence[i-1]==\" \") {\n                sentence = sentence.slice(0,i) + sentence[i].toUpperCase() + sentence.slice(i+1);             \n            }\n        }\n        return sentence;\n    }\n\n    return(\n        <>\n            <div className=\"weather-body\">\n                <div>\n                <span className=\"weather-location\">Weather in {data.name}, {data.sys.country}</span>\n                </div>\n                \n                <div className=\"weather-main\">\n                    <div className=\"weather-icon-div\">\n                         <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} alt=\"weather-icon\" />\n                         <span className=\"weather-description\">{capitalize(data.weather[0].description)}</span>\n                    </div>\n                    <div className=\"weather-main-temp-div\">\n                        <span className=\"weather-main-temp\">{kelvin_to_celcius(data.main.temp)}째C</span>\n                    </div>\n                    \n                </div>\n                \n                <span>Feels like: {kelvin_to_celcius(data.main.feels_like)}째C</span>\n                \n                \n               <div>\n                    <span>H {kelvin_to_celcius(data.main.temp_max)}째C | </span>\n                    <span>L {kelvin_to_celcius(data.main.temp_min)}째C</span>\n               </div>\n                   \n               \n                    <span>Wind: {Math.round(data.wind.speed * 3.6)} km/h</span>\n               \n            </div>\n        </>\n    )\n}\n\nexport default Location;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}