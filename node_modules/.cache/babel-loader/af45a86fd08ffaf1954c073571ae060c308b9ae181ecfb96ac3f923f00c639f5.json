{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './Location.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowsRotate } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Location() {\n  _s();\n  const lookup = require('country-code-lookup');\n  let result = lookup.byIso('CA');\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [data, setData] = useState({\n    name: \"\",\n    cod: 0,\n    sys: {\n      country: \"\"\n    },\n    wind: {\n      speed: 0\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0\n    },\n    weather: [{\n      description: \"\",\n      icon: \"\"\n    }]\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n\n  //     useEffect(() => {\n  //         if (lat && long) {\n  //             fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n  //             .then(res => res.json())\n  //             .then(data => {\n  //                 setData(data); \n  //             })\n  //             .catch(error => {\n  //             console.error(\"Error fetching data:\", error);\n  //         });\n  //     }\n\n  // }, [lat, long]);\n\n  function kelvin_to_celcius(k) {\n    return Math.round(k - 273.15);\n  }\n  function capitalize(sentence) {\n    for (let i = 0; i < sentence.length; i++) {\n      if (i == 0 || sentence[i - 1] == \" \") {\n        sentence = sentence.slice(0, i) + sentence[i].toUpperCase() + sentence.slice(i + 1);\n      }\n    }\n    return sentence;\n  }\n  function refresh() {\n    window.location.reload();\n  }\n  const date = new Date();\n  console.log(date.toLocaleTimeString());\n  return data.name == \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: \"fa-regular fa-spinner\",\n      spin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-location-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"weather-location\",\n        children: [\"Weather in \", data.name, \", \", data.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: refresh,\n        children: [\"As of \", date.toLocaleTimeString(), \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowsRotate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-icon-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weather-icon\",\n          src: `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n          alt: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weather-description\",\n          children: capitalize(data.weather[0].description)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main-temp-div\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weather-main-temp\",\n          children: [kelvin_to_celcius(data.main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Feels like: \", kelvin_to_celcius(data.main.feels_like), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"H \", kelvin_to_celcius(data.main.temp_max), \"\\xB0C | \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"L \", kelvin_to_celcius(data.main.temp_min), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Wind: \", Math.round(data.wind.speed * 3.6), \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 13\n  }, this);\n}\n_s(Location, \"ow1PMM8tQQrwLHZlDSH2tboSkcQ=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["useEffect","useState","FontAwesomeIcon","faArrowsRotate","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","lookup","require","result","byIso","lat","setLat","long","setLong","data","setData","name","cod","sys","country","wind","speed","main","temp","feels_like","temp_min","temp_max","weather","description","icon","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","kelvin_to_celcius","k","Math","round","capitalize","sentence","i","length","slice","toUpperCase","refresh","window","location","reload","date","Date","console","log","toLocaleTimeString","children","spin","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport './Location.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowsRotate, faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nfunction Location() {\n    const lookup = require('country-code-lookup')\n  \n    let result: Country = lookup.byIso('CA');\n\n\n    const [lat, setLat] = useState<number>();\n    const [long, setLong] = useState<number>();\n\n    interface Country {\n        country: string;\n    }\n  \n    interface WeatherData {\n        name: string;\n        cod: number;\n        sys: {\n            country: string;\n        }\n        wind: {\n            speed: number;\n        }\n        main: {\n            temp: number;\n            feels_like: number;\n            temp_min: number;\n            temp_max: number;\n        }\n        weather: {\n            description: string;\n            icon: string;\n        }[];\n    }\n\n    const [data, setData] = useState<WeatherData>({\n        name: \"\",\n        cod: 0,\n        sys: {\n            country: \"\"\n        },\n        wind: {\n            speed: 0\n        },\n        main: {\n            temp: 0,\n            feels_like: 0,\n            temp_min: 0,\n            temp_max: 0\n        },\n        weather: [{\n            description: \"\",\n            icon: \"\"\n        }]\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude)\n            setLong(position.coords.longitude)\n        }\n     )\n    },[])\n\n//     useEffect(() => {\n//         if (lat && long) {\n//             fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n//             .then(res => res.json())\n//             .then(data => {\n//                 setData(data); \n//             })\n//             .catch(error => {\n//             console.error(\"Error fetching data:\", error);\n//         });\n//     }\n        \n// }, [lat, long]);\n    \n\n\n    function kelvin_to_celcius(k: number):number {\n        return (Math.round(k-273.15))\n    }\n\n    function capitalize(sentence: string):string {\n        for(let i=0; i<sentence.length; i++) {\n            if (i==0 || sentence[i-1]==\" \") {\n                sentence = sentence.slice(0,i) + sentence[i].toUpperCase() + sentence.slice(i+1);             \n            }\n        }\n        return sentence;\n    }\n\n    function refresh() {\n        window.location.reload();\n    }\n\n    const date = new Date();\n    console.log(date.toLocaleTimeString())\n    return(\n        (data.name == \"\") ? (\n            <>\n                <FontAwesomeIcon icon=\"fa-regular fa-spinner\" spin />\n            </>\n        ): (\n\n            <div className=\"weather-body\">\n\n            <div className=\"weather-location-div\">\n                <span className=\"weather-location\">Weather in {data.name}, {data.sys.country}</span>\n                <span onClick={refresh}>As of {date.toLocaleTimeString()} <FontAwesomeIcon icon={faArrowsRotate} /></span>\n                \n\n            </div>\n            \n            <div className=\"weather-main\">\n                <div className=\"weather-icon-div\">\n                        <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} alt=\"weather-icon\" />\n                        <span className=\"weather-description\">{capitalize(data.weather[0].description)}</span>\n                </div>\n                <div className=\"weather-main-temp-div\">\n                    <span className=\"weather-main-temp\">{kelvin_to_celcius(data.main.temp)}°C</span>\n                </div>\n                \n            </div>\n            \n            <div>\n                <span>Feels like: {kelvin_to_celcius(data.main.feels_like)}°C</span>\n                <div>\n                    <span>H {kelvin_to_celcius(data.main.temp_max)}°C | </span>\n                    <span>L {kelvin_to_celcius(data.main.temp_min)}°C</span>\n                </div>\n                <span>Wind: {Math.round(data.wind.speed * 3.6)} km/h</span>   \n            </div>\n                        \n        </div>\n\n        )\n\n        \n        \n    )\n}\n\nexport default Location;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}