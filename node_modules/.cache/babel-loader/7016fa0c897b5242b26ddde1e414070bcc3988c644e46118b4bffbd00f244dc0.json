{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Meme Generator/my-app/src/App.tsx\";\nimport { useState } from 'react';\nimport './App.css';\nimport memesData from './memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  function new_link() {\n    _s();\n    let [memeState, setMemeStar] = useState(\"\");\n    let array = memesData.data.memes;\n    let rand_num = Math.floor(Math.random() * array.length);\n    console.log(array[rand_num].url);\n  }\n  _s(new_link, \"ZAV+d70vhEm5bobwrEGN2N4kZJU=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: new_link,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","memesData","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","new_link","memeState","setMemeStar","array","data","memes","rand_num","Math","floor","random","length","console","log","url","children","className","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Meme Generator/my-app/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport memesData from './memesData';\n\nfunction App() {\n\n  function new_link() {\n    let [memeState, setMemeStar] = useState(\"\")\n\n    let array = memesData.data.memes;\n    let rand_num = Math.floor(Math.random() * array.length)\n    console.log(array[rand_num].url)\n  }\n\n  return (\n    <div>\n      <div className='input-container'>\n        <input type=\"text\" />\n        <input type=\"text\" />\n      </div>\n      <div className='button-container'>\n        <button onClick={new_link}>Get a new meme image</button>\n        <img src=\"\" alt=\"\" />\n      </div>  \n    </div>\n  )\n}\n\nexport default App;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEb,SAASC,QAAQA,CAAA,EAAG;IAAAF,EAAA;IAClB,IAAI,CAACG,SAAS,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;IAE3C,IAAIU,KAAK,GAAGT,SAAS,CAACU,IAAI,CAACC,KAAK;IAChC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,KAAK,CAACO,MAAM,CAAC;IACvDC,OAAO,CAACC,GAAG,CAACT,KAAK,CAACG,QAAQ,CAAC,CAACO,GAAG,CAAC;EAClC;EAACf,EAAA,CANQE,QAAQ;EAQjB,oBACEJ,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BlB,OAAA;QAAOoB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBxB,OAAA;QAAOoB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BlB,OAAA;QAAQyB,OAAO,EAAErB,QAAS;QAAAc,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDxB,OAAA;QAAK0B,GAAG,EAAC,EAAE;QAACC,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACI,EAAA,GAtBQ3B,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}