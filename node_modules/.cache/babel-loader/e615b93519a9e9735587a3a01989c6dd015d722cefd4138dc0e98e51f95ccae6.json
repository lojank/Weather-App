{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Location() {\n  _s();\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [data, setData] = useState({\n    cod: 0\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {\n    if (lat && long) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`).then(res => res.json()).then(data => {\n        setData(data);\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" \", JSON.stringify(value)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: lat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: long\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cod: \", data.cod]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(Location, \"YPiWYVY5fMgrVUZWJxwlUoKQgGg=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","lat","setLat","long","setLong","data","setData","cod","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","catch","error","console","children","Object","entries","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nfunction Location() {\n\n    const [lat, setLat] = useState<number>();\n    const [long, setLong] = useState<number>();\n\n    interface WeatherData {\n        name: string;\n        cod: number;\n    }\n\n    const [data, setData] = useState<WeatherData>({\n        cod: 0\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude)\n            setLong(position.coords.longitude)\n        }\n     )\n    },[])\n\n    useEffect(() => {\n        if (lat && long) {\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n            .then(res => res.json())\n            .then(data => {\n                setData(data); \n            })\n            .catch(error => {\n            console.error(\"Error fetching data:\", error);\n        });\n    }\n        \n}, [lat, long]);\n    \n\n\n\n    return(\n        <>\n            <ul>\n        {Object.entries(data).map(([key, value]) => (\n          <li key={key}>\n            <strong>{key}:</strong> {JSON.stringify(value)}\n          </li>\n        ))}\n        </ul>\n        <h1>{lat}</h1>\n       <h1>{long}</h1>\n       \n       <h1>Cod: {data.cod}</h1>\n        </>\n    )\n}\n\nexport default Location;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAS,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAS,CAAC;EAO1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAc;IAC1Ca,GAAG,EAAE;EACT,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACZe,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAE;MACxDT,MAAM,CAACS,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;MAChCT,OAAO,CAACO,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACtC,CACH,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAELrB,SAAS,CAAC,MAAM;IACZ,IAAIQ,GAAG,IAAIE,IAAI,EAAE;MACbY,KAAK,CAAE,uDAAsDd,GAAI,QAAOE,IAAK,yCAAwC,CAAC,CACrHa,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACX,IAAI,IAAI;QACVC,OAAO,CAACD,IAAI,CAAC;MACjB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN;EAEJ,CAAC,EAAE,CAACnB,GAAG,EAAEE,IAAI,CAAC,CAAC;EAKX,oBACIP,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EACHC,MAAM,CAACC,OAAO,CAACnB,IAAI,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACrC/B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,GAASI,GAAG,EAAC,GAAC;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;MAAA,GADvCD,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACLnC,OAAA;MAAA0B,QAAA,EAAKrB;IAAG;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfnC,OAAA;MAAA0B,QAAA,EAAKnB;IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEfnC,OAAA;MAAA0B,QAAA,GAAI,OAAK,EAACjB,IAAI,CAACE,GAAG;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACrB,CAAC;AAEX;AAAC/B,EAAA,CAtDQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}