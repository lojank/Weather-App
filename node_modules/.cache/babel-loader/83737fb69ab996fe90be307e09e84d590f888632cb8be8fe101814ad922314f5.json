{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Meme Generator/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport memesData from './memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [meme, setMemeState] = useState({\n    top\n  });\n  let memesArray = memesData.data.memes;\n  function new_link() {\n    let rand_num = Math.floor(Math.random() * memesArray.length);\n    setMemeState(memesArray[rand_num].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: new_link,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A3ypJ7c+dWZYo3FUzp+bNDVy/cc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","memesData","jsxDEV","_jsxDEV","App","_s","meme","setMemeState","top","memesArray","data","memes","new_link","rand_num","Math","floor","random","length","url","children","className","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Meme Generator/my-app/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport memesData from './memesData';\n\nfunction App() {\n  let [meme, setMemeState] = useState({\n    top\n  })\n  let memesArray = memesData.data.memes;\n\n  function new_link() { \n    let rand_num = Math.floor(Math.random() * memesArray.length)\n    setMemeState(memesArray[rand_num].url)\n  }\n\n  return (\n    <div>\n      <div className='input-container'>\n        <input type=\"text\" />\n        <input type=\"text\" />\n      </div>\n      <div className='output-container'>\n        <button onClick={new_link}>Get a new meme image</button>\n        <img src={meme} alt=\"\" />\n      </div>  \n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IAClCQ;EACF,CAAC,CAAC;EACF,IAAIC,UAAU,GAAGR,SAAS,CAACS,IAAI,CAACC,KAAK;EAErC,SAASC,QAAQA,CAAA,EAAG;IAClB,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACQ,MAAM,CAAC;IAC5DV,YAAY,CAACE,UAAU,CAACI,QAAQ,CAAC,CAACK,GAAG,CAAC;EACxC;EAEA,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BhB,OAAA;QAAOkB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBtB,OAAA;QAAOkB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BhB,OAAA;QAAQuB,OAAO,EAAEd,QAAS;QAAAO,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDtB,OAAA;QAAKwB,GAAG,EAAErB,IAAK;QAACsB,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAvBQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}