{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, newState] = useState('');\n\n  //   useEffect(() => {\n  //     return () => { fetch(\"http://api.openweathermap.org/geo/1.0/direct?q=Markham,CA&appid=3289764f272a524f9cf22f194959aa13\")\n  //       .then(res => res.json())\n  //       .then(function getData(data) {\n  //         newState(data)\n  //       } )\n  // }}, [])\n\n  //   return (\n  //     <h1>{state}</h1>\n  //   )\n\n  useEffect(() => {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Markham,CA&appid=YOUR_API_KEY\") // Replace YOUR_API_KEY with your actual API key\n    .then(res => res.json()).then(data => {\n      setState(data.weather[0].description); // Assuming you want to display the weather description\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather in Markham, CA:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Cp2njowgLSeefNjBIxss4bKH0I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","state","newState","fetch","then","res","json","data","setState","weather","description","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport './App.css';\n\nfunction App() {\n  const [state, newState] = useState('')\n\n//   useEffect(() => {\n//     return () => { fetch(\"http://api.openweathermap.org/geo/1.0/direct?q=Markham,CA&appid=3289764f272a524f9cf22f194959aa13\")\n//       .then(res => res.json())\n//       .then(function getData(data) {\n//         newState(data)\n//       } )\n// }}, [])\n  \n//   return (\n//     <h1>{state}</h1>\n//   )\n\nuseEffect(() => {\n  fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Markham,CA&appid=YOUR_API_KEY\") // Replace YOUR_API_KEY with your actual API key\n    .then(res => res.json())\n    .then(data => {\n      setState(data.weather[0].description); // Assuming you want to display the weather description\n    })\n    .catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n}, []);\n\nreturn (\n  <div>\n    <h1>Weather in Markham, CA:</h1>\n    <p>{state}</p>\n  </div>\n);\n\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,iFAAiF,CAAC,CAAC;IAAA,CACtFC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZC,QAAQ,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCpB,OAAA;MAAAgB,QAAA,EAAIb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAGR;AAAClB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}