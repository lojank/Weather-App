{"ast":null,"code":"var _jsxFileName = \"/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Location() {\n  _s();\n  const lookup = require('country-code-lookup');\n  let result = lookup.byIso('CA');\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [data, setData] = useState({\n    name: \"\",\n    cod: 0,\n    sys: {\n      country: \"\",\n      sunrise: 0,\n      sunset: 0\n    },\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0\n    },\n    weather: [{\n      main: \"\",\n      icon: \"\"\n    }]\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n  useEffect(() => {\n    if (lat && long) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`).then(res => res.json()).then(data => {\n        setData(data);\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  }, [lat, long]);\n  const sunriseDate = new Date(data.sys.sunrise * 1000);\n  const sunsetDate = new Date(data.sys.sunset * 1000);\n  function kelvin_to_celcius(k) {\n    return Math.round(k - 273.15);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \" \", JSON.stringify(value)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: lat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: long\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cod: \", data.cod]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"City: \", data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Country: \", data.sys.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: result.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Icon: \", data.weather[0].icon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Current weather in \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Temperature: \", kelvin_to_celcius(data.main.temp)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Feels like: \", kelvin_to_celcius(data.main.feels_like)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Descrption: \", data.weather[0].main]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"HI: \", kelvin_to_celcius(data.main.temp_max)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"LO: \", kelvin_to_celcius(data.main.temp_min)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"weather-icon\",\n        src: `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Sunrise: \", sunriseDate.getHours(), \":\", sunriseDate.getMinutes()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Location, \"c9gnRrnSlEQQ/n/sRjx/yVYgZQw=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","lookup","require","result","byIso","lat","setLat","long","setLong","data","setData","name","cod","sys","country","sunrise","sunset","main","temp","feels_like","temp_min","temp_max","weather","icon","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","catch","error","console","sunriseDate","Date","sunsetDate","kelvin_to_celcius","k","Math","round","children","Object","entries","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","className","src","alt","getHours","getMinutes","_c","$RefreshReg$"],"sources":["/Users/lojankarunakaran/Web development/React/Weather App/my-app/src/components/Location.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport './Location.css'\n\nfunction Location() {\n    const lookup = require('country-code-lookup')\n  \n    let result: Country = lookup.byIso('CA');\n\n\n    const [lat, setLat] = useState<number>();\n    const [long, setLong] = useState<number>();\n\n    interface Country {\n        country: string;\n    }\n  \n    interface WeatherData {\n        name: string;\n        cod: number;\n        sys: {\n            country: string;\n            sunrise: number;\n            sunset: number;\n        }\n        main: {\n            temp: number;\n            feels_like: number;\n            temp_min: number;\n            temp_max: number;\n        }\n        weather: {\n            main: string;\n            icon: string;\n        }[];\n    }\n\n    const [data, setData] = useState<WeatherData>({\n        name: \"\",\n        cod: 0,\n        sys: {\n            country: \"\",\n            sunrise: 0,\n            sunset: 0\n        },\n        main: {\n            temp: 0,\n            feels_like: 0,\n            temp_min: 0,\n            temp_max: 0\n        },\n        weather: [{\n            main: \"\",\n            icon: \"\"\n        }]\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude)\n            setLong(position.coords.longitude)\n        }\n     )\n    },[])\n\n    useEffect(() => {\n        if (lat && long) {\n\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=3289764f272a524f9cf22f194959aa13`)\n            .then(res => res.json())\n            .then(data => {\n                setData(data); \n            })\n            .catch(error => {\n            console.error(\"Error fetching data:\", error);\n        });\n    }\n        \n}, [lat, long]);\n    \n    const sunriseDate = new Date(data.sys.sunrise * 1000); \n    const sunsetDate = new Date(data.sys.sunset * 1000); \n\n    function kelvin_to_celcius(k: number) :number {\n        return (Math.round(k-273.15))\n    }\n\n    return(\n        <>\n            <ul>\n        {Object.entries(data).map(([key, value]) => (\n          <li key={key}>\n            <strong>{key}:</strong> {JSON.stringify(value)}\n          </li>\n        ))}\n        </ul>\n        <h1>{lat}</h1>\n       <h1>{long}</h1>\n       \n       <h1>Cod: {data.cod}</h1>\n       <h1>City: {data.name}</h1>\n       <h1>Country: {data.sys.country}</h1>\n       <h1>{result.country}</h1>\n       <h1>Icon: {data.weather[0].icon}</h1>\n\n            <div className=\"weather-body\">\n                <h1>Current weather in {data.name}</h1>\n                <h1>Temperature: {kelvin_to_celcius(data.main.temp)}</h1>\n                <h1>Feels like: {kelvin_to_celcius(data.main.feels_like)}</h1>\n                <h1>Descrption: {data.weather[0].main}</h1>\n                <h1>HI: {kelvin_to_celcius(data.main.temp_max)}</h1>\n                <h1>LO: {kelvin_to_celcius(data.main.temp_min)}</h1>\n                <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} alt=\"\" />\n                <h1>Sunrise: {sunriseDate.getHours()}:{sunriseDate.getMinutes()}</h1>\n            </div>\n        </>\n    )\n}\n\nexport default Location;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}